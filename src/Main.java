//В нашем зоопарке появился заяц.
// Его поместили в клетку, и чтобы ему не было скучно, директор зоопарка
// распорядился поставить в его клетке лесенку. Теперь наш зайчик может
// прыгать по лесенке вверх, перепрыгивая через ступеньки. Лестница имеет
// определенное количество ступенек N. Заяц может одним прыжком преодолеть
// не более К ступенек. Для разнообразия зайчик пытается каждый раз найти
// новый путь к вершине лестницы. Директору любопытно, сколько различных
// способов есть у зайца добраться до вершины лестницы при заданных
// значениях K и N. Помогите директору написать программу, которая поможет
// вычислить это количество. Например, если K=3 и N=4, то существуют
// следующие маршруты: 1+1+1+1, 1+1+2, 1+2+1, 2+1+1, 2+2, 1+3, 3+1.
// Т.е. при данных значениях у зайца всего 7 различных маршрутов добраться
// до вершины лестницы.

public class Main {
    private static int N = 10, K = 3, count = 0;

    public static void main(String[] args) {
        prygok(N, 1, "");
        System.out.println("Всего путей :" + count);
    }

    private static void prygok(int remain, int prygokNumb, String path) {
        for (int i = 1; i <= K; i++) {
            if (remain - i >= 0) {
                System.out.println("Прыжок №" + prygokNumb + " на " + i + " " + ladder(i));
                if ((remain - i) > 0) prygok(remain - i, prygokNumb + 1, path + i + "+");
                if ((remain - i) == 0) {
                    System.out.println("Найден путь №" + ++count);
                    System.out.println("Путь:" + path + i);
                }
            }
        }
    }

    private static String ladder(int number) {
        if (number > 20) number = number % 10;
        switch (number) {
            case 1:
                return ("ступень");
            case 2:
                return ("ступени");
            case 3:
                return ("ступени");
            case 4:
                return ("ступени");
            default:
                return ("ступеней");
        }
    }


}